@using K_Systems.Presentation.Web.Models.ViewModel
@using K_Systems.Data.Core.Domain

@model EmployeeHomeViewModel

<input type="hidden" name="order" id="inputOrder" value='@(Model.order ?? "asc")' />
<input type="hidden" name="sortBy" id="inputSortBy" value='@(Model.sortBy ?? "ID")' />

<table class="table table-hover table-striped text-center mg-t-s" data-selected="false" id="dataTable">
    <thead>
        <tr>
            <th class="text-center" data-sortBy="ID">
                @Html.DisplayNameFor(emps => emps.employee.ID)
                <span class='glyphicon glyphicon-sort-by-attributes @(Model.sortBy == "ID" && Model.order=="asc" ? "": "text-muted" )' data-order="asc"></span>
                <span class="glyphicon glyphicon-sort-by-attributes-alt  @(Model.sortBy == "ID" && Model.order=="dsc" ? "": "text-muted" )" data-order="dsc"></span>
            </th>
            <th class="text-center" data-sortBy="fName">
                @Html.DisplayNameFor(emps => emps.employee.fName)
                <span class="glyphicon glyphicon-sort-by-attributes @(Model.sortBy == "fName"  && Model.order=="asc" ? "": "text-muted" )" data-order="asc"></span>
                <span class="glyphicon glyphicon-sort-by-attributes-alt @(Model.sortBy == "fName"   && Model.order=="dsc"? "": "text-muted" )" data-order="dsc"></span>
            </th>
            <th class="text-center" data-sortBy="lName">
                @Html.DisplayNameFor(emps => emps.employee.lName)
                <span class="glyphicon glyphicon-sort-by-attributes @(Model.sortBy == "lName" && Model.order=="asc" ? "": "text-muted" )" data-order="asc"></span>
                <span class="glyphicon glyphicon-sort-by-attributes-alt @(Model.sortBy == "lName" && Model.order=="dsc" ? "": "text-muted" )" data-order="dsc"></span>
            </th>
            <th class="text-center" data-sortBy="phone">
                @Html.DisplayNameFor(emps => emps.employee.phone)
                <span class="glyphicon glyphicon-sort-by-attributes @(Model.sortBy == "phone" && Model.order=="asc" ? "": "text-muted" )" data-order="asc"></span>
                <span class="glyphicon glyphicon-sort-by-attributes-alt @(Model.sortBy == "phone" && Model.order=="dsc" ? "": "text-muted" )" data-order="dsc"></span>
            </th>
            <th class="text-center" data-sortBy="email">
                @Html.DisplayNameFor(emps => emps.employee.email)
                <span class="glyphicon glyphicon-sort-by-attributes @(Model.sortBy == "email" && Model.order=="asc" ? "": "text-muted" )" data-order="asc"></span>
                <span class="glyphicon glyphicon-sort-by-attributes-alt @(Model.sortBy == "email" && Model.order=="dsc" ? "": "text-muted" )" data-order="dsc"></span>
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (Employee employee in Model.employees)
        {
            <tr data-id="@employee.ID">
                <td>@Html.DisplayFor(e => employee.ID)</td>
                <td>@Html.DisplayFor(e => employee.fName)</td>
                <td>@Html.DisplayFor(e => employee.lName)</td>
                <td>@Html.DisplayFor(e => employee.phone)</td>
                <td>@Html.DisplayFor(e => employee.email)</td>
            </tr>
        }


    </tbody>
</table>

<div class="col-lg-8 col-lg-offset-4" id="pagingRemovable">
    <nav aria-label="Page navigation">
        <ul class="pagination">

            <li class="@((((int)Model.page) - 1) <= 0 ? "disable": "")">
                <a href="javascript:void(0)" data-url="@Url.Action("Search",
                        new
                   {
                       search = Model.search,
                       items = Model.items,
                       sortBy = Model.sortBy,
                       order = Model.order,
                       page = (((int)Model.page) - 1).ToString()
                   })"
                   aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            @for (int i = 0; i < (int)Model.totalPages; i++)
            {
                <li class="@((int)Model.page == (i+1)? "active": "")">

                    <a href="javascript:void(0)" data-url="@Url.Action("Search",new
                                                         {
                                                             search = Model.search,
                                                             items = Model.items,
                                                             sortBy = Model.sortBy,
                                                             order = Model.order,
                                                             page = (i + 1).ToString()
                                                         })">
                        @((i + 1).ToString())
                    </a>
                    @*@Html.ActionLink((i + 1).ToString(),"Search",
                        new
                        {
                            search = Model.search,
                            items = Model.items,
                            sortBy = Model.sortBy,
                            order = Model.order,
                            page = (i + 1).ToString()
                        })*@
                </li>
            }

            <li class="@((((int)Model.page) + 1) > (int)Model.totalPages ? "disable": "")">
                <a href="javascript:void(0)" data-url="@Url.Action("Search",
                        new
                   {
                       search = Model.search,
                       items = Model.items,
                       sortBy = Model.sortBy,
                       order = Model.order,
                       page = (((int)Model.page) + 1).ToString()
                   })"
                   aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>




