@using K_Systems.Presentation.Web.Models.ViewModel
@using K_Systems.Data.Core.Domain

@model CourseHomeViewModel

<input type="hidden" name="order" id="inputOrder" value='@(Model.order ?? "asc")' />
<input type="hidden" name="sortBy" id="inputSortBy" value='@(Model.sortBy ?? "ID")' />

<table class="table table-hover table-striped text-center mg-t-s" data-selected="false" id="dataTable">
    <thead>
        <tr>
            <th class="text-center">
                @Html.DisplayNameFor(emps => emps.course.ID)

                @Ajax.BodiedActionLink("<span class='glyphicon glyphicon-sort-by-attributes'></span>", "Search","Courses",
                       new TablePageInfo {
                           search = Model.search,
                           items = Model.items,
                           sortBy = nameof(Model.course.ID),
                           order = "asc",
                           page = Model.page
                       }, new AjaxOptions
                       {
                           HttpMethod = "get",
                           InsertionMode = InsertionMode.Replace,
                           UpdateTargetId = "main"
                       },new { @class= Model.sortBy == nameof(Model.course.ID) && Model.order == "asc" ? "" : "text-muted" })

                @Ajax.BodiedActionLink("<span class='glyphicon glyphicon-sort-by-attributes'></span>", "Search", "Courses",
                      new TablePageInfo{
                          search = Model.search,
                          items = Model.items,
                          sortBy = nameof(Model.course.ID),
                          order = "dsc",
                          page = Model.page
                      }, new AjaxOptions
                      {
                          HttpMethod = "get",
                          InsertionMode = InsertionMode.Replace,
                          UpdateTargetId = "main"
                      },new { @class= Model.sortBy == nameof(Model.course.ID) && Model.order == "dsc" ? "" : "text-muted" })
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(emps => emps.course.name)

                @Ajax.BodiedActionLink("<span class='glyphicon glyphicon-sort-by-attributes'></span>", "Search","Courses",
                       new TablePageInfo
                       {
                           search = Model.search,
                           items = Model.items,
                           sortBy = nameof(Model.course.name),
                           order = "asc",
                           page = Model.page
                       }, new AjaxOptions
                       {
                           HttpMethod = "get",
                           InsertionMode = InsertionMode.Replace,
                           UpdateTargetId = "main"
                       },new { @class= Model.sortBy == nameof(Model.course.name) && Model.order == "asc" ? "" : "text-muted" })

                @Ajax.BodiedActionLink("<span class='glyphicon glyphicon-sort-by-attributes'></span>", "Search", "Courses",
                      new TablePageInfo
                      {
                          search = Model.search,
                          items = Model.items,
                          sortBy = nameof(Model.course.name),
                          order = "dsc",
                          page = Model.page
                      }, new AjaxOptions
                      {
                          HttpMethod = "get",
                          InsertionMode = InsertionMode.Replace,
                          UpdateTargetId = "main"
                      },new { @class= Model.sortBy == nameof(Model.course.name) && Model.order == "dsc" ? "" : "text-muted" })
            </th>
            <th class="text-center">

                @Ajax.BodiedActionLink("<span class='glyphicon glyphicon-sort-by-attributes'></span>", "Search","Courses",
                       new TablePageInfo
                       {
                           search = Model.search,
                           items = Model.items,
                           sortBy = nameof(Model.course.description),
                           order = "asc",
                           page = Model.page
                       }, new AjaxOptions
                       {
                           HttpMethod = "get",
                           InsertionMode = InsertionMode.Replace,
                           UpdateTargetId = "main"
                       },new { @class= Model.sortBy == nameof(Model.course.description) && Model.order == "asc" ? "" : "text-muted" })

                @Ajax.BodiedActionLink("<span class='glyphicon glyphicon-sort-by-attributes'></span>", "Search", "Courses",
                      new TablePageInfo
                      {
                          search = Model.search,
                          items = Model.items,
                          sortBy = nameof(Model.course.description),
                          order = "dsc",
                          page = Model.page
                      }, new AjaxOptions
                      {
                          HttpMethod = "get",
                          InsertionMode = InsertionMode.Replace,
                          UpdateTargetId = "main"
                      },new { @class= Model.sortBy == nameof(Model.course.description) && Model.order == "dsc" ? "" : "text-muted" })
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (Course course in Model.courses)
        {
            <tr data-id="@course.ID">
                <td>@Html.DisplayFor(e => course.ID)</td>
                <td>@Html.DisplayFor(e => course.name)</td>
                <td>@Html.DisplayFor(e => course.description)</td>
            </tr>
        }


    </tbody>
</table>

<div class="col-lg-8 col-lg-offset-4" id="pagingRemovable">
    <nav aria-label="Page navigation">
        <ul class="pagination">

            <li class="@((((int)Model.page) - 1) <= 0 ? "disable": "")">
                @Ajax.BodiedActionLink("<span aria-hidden='true'>&laquo;</span>", "Search","Courses",
                   new TablePageInfo{
                       search = Model.search,
                       items = Model.items,
                       sortBy = Model.sortBy,
                       order = Model.order,
                       page = (((int)Model.page) - 1)
                   },
                   new AjaxOptions
                   {
                       HttpMethod = "get",
                       InsertionMode = InsertionMode.Replace,
                       UpdateTargetId = "main"
                   },new { aria_label = "Previous" })
            </li>

            @for (int i = 0; i < (int)Model.totalPages; i++)
            {
                <li class="@((int)Model.page == (i+1)? "active": "")">
                    @Ajax.ActionLink((i+1).ToString(), "Search",
                     new {
                         search = Model.search,
                         items = Model.items,
                         sortBy = Model.sortBy,
                         order = Model.order,
                         page = (i + 1).ToString()
                     },
                      new AjaxOptions
                      {
                          HttpMethod = "get",
                          InsertionMode = InsertionMode.Replace,
                          UpdateTargetId = "main"
                      })
                </li>
            }

            <li class="@((((int)Model.page) + 1) > (int)Model.totalPages ? "disable": "")">
                @Ajax.BodiedActionLink("<span aria-hidden='true'>&raquo;</span>", "Search","Courses",
                      new TablePageInfo
                      {
                          search = Model.search,
                          items = Model.items,
                          sortBy = Model.sortBy,
                          order = Model.order,
                          page = (((int)Model.page) + 1)
                      },
                      new AjaxOptions
                      {
                          HttpMethod = "get",
                          InsertionMode = InsertionMode.Replace,
                          UpdateTargetId = "main"
                      },new { aria_label = "Previous" })
            </li>
        </ul>
    </nav>
</div>




